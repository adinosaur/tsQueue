#include "../include/tsQueue.h"

template <typename T>
void TSQueue<T>::push_back(const T& val)
{
    pthread_mutex_lock(&_d_mutex);
    _deque.push_back(val);
    pthread_mutex_unlock(&_d_mutex);
}

template <typename T>
T TSQueue<T>::pop_front()
{
    pthread_mutex_lock(&_d_mutex);
    value_type tmp = _deque.front();
    _deque.pop_front();
    pthread_mutex_unlock(&_d_mutex);
    return tmp;
}

template<typename T>
bool TSQueue<T>::empty()
{
    return _deque.empty();
}

template <typename T>
void TSQueue<T>::print(std::ostream& os)
{
    for (auto x : _deque)
        os << x << std::endl;
}
